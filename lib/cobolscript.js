var cobolscript = (function() {    var TokenType = { Integer: 1, String: 2, Name: 3 };        function Token(value, type)    {        this.value = value;        this.type = type;    }    function Lexer(text) {        var position = 0;                this.nextToken = function() {            var ch = nextFirstChar();                        if (ch == null)                return null;                        if (isLetter(ch))                return nextName(ch);        }            function nextName(letter)        {            var name = letter;                        for (var ch = nextChar(); ch && (isLetter(ch) || isDigit(ch) || ch == '-'); ch = nextChar())                name += ch;            pushChar(ch);                        return new Token(name, TokenType.Name);        }        function nextFirstChar() {            if (!text)                return null;                            skipSpaces();                        if (position >= text.length)                return null;                            return nextChar();        }                function nextChar() {            return text[position++];        }        function pushChar(ch) {            if (ch)                position--;        }                function skipSpaces() {            while (position < text.length && isSpace(text[position]))                position++;        }                function isSpace(ch) {            if (ch <= ' ' && ch != '\n')                return true;                            return false;        }        function isLetter(ch) {            return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');        }                function isDigit(ch) {            return ch && ch >= '0' && ch <= '9';        }    }        return {        Lexer: Lexer,        TokenType: TokenType    }})();if (typeof(window) === 'undefined') {	module.exports = cobolscript;}